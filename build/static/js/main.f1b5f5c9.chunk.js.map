{"version":3,"sources":["components/ChatFeed.jsx","App.js","index.js"],"names":["ChatFeed","props","chats","activeChat","userName","messages","chat","renderReadReceipts","ismyMsg","people","map","person","index","last_read","id","float","backgrounImage","avatar","className","title","keys","Object","key","message","lastMessageKey","sender","style","width","lastMessage","marginRight","marginLeft","renderMessages","height","chatID","App","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAiEeA,EA5DE,SAACC,GAElB,IAAMC,EAA0CD,EAA1CC,MAAOC,EAAmCF,EAAnCE,WAAYC,EAAuBH,EAAvBG,SAAUC,EAAaJ,EAAbI,SAEzBC,EAAOJ,GAASA,EAAMC,GAEtBI,EAAoB,SAACF,EAASG,GAAV,OAAqBF,EAAKG,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAAiBD,EAAOE,YAAcR,EAASS,IAC1G,wDACmBF,GADnB,oCAGW,CACHG,MAAOP,EAAS,QAAU,OAC1BQ,eAAgBL,EAAOA,OAAOM,QAAd,cAA+BN,EAAOA,OAAOM,OAA7C,aAgC5B,OACI,qBAAKC,UAAY,YAAjB,SACI,sBAAKA,UAAU,uBAAf,UACQ,qBAAKA,UAAU,aAAf,gBAA6BZ,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMa,QACnC,qBAAKD,UAAU,kBA/BJ,WACnB,IAAME,EAAOC,OAAOD,KAAKf,GAEzB,OAAOe,EAAKV,KAAI,SAACY,EAAKV,GAClB,IAAMW,EAAUlB,EAASiB,GACnBE,EAA2B,IAAVZ,EAAc,KAAOQ,EAAKR,EAAO,GAClDJ,EAAUJ,IAAamB,EAAQE,OAAOrB,SAE5C,OACI,sBAA4BsB,MAAO,CAACC,MAAO,QAA3C,UACI,qBAAKT,UAAU,gBAAf,SACMV,EACI,uBAAOe,QAAWlB,IAClB,2BAAWkB,QAAWA,EAASK,YAAevB,EAASmB,OAGjE,qBAAKN,UAAY,gBAAgBQ,MAAS,CAACG,YAAcrB,EAAU,OAAS,MAChCsB,WAAatB,EAAU,MAAQ,QAD3E,SAGKD,EAAmBF,EAASG,OAVrC,cAAmBI,OAyBlBmB,GACD,qBAAKL,MAAO,CAACM,OAAO,WACpB,qBAAKd,UAAU,qBAAf,SACI,mDAAajB,GAAb,IAAoBgC,OAAQ9B,aCzCrC+B,MAff,WACE,OACE,qBAAKhB,UAAU,MAAf,SACC,cAAC,IAAD,CACCc,OAAS,QACTG,UAAY,uCACZ/B,SAAW,QACXgC,WAAa,SACbC,eAAkB,SAACC,GAAD,OAAkB,cAAC,EAAD,eAAcA,KAClDC,aAAgB,kBAAM,IAAIC,MAAM,yDAAyDC,aCP/FC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f1b5f5c9.chunk.js","sourcesContent":["\r\nimport msgForm from \"./msgForm\";\r\nimport myMsg from \"./myMsg\";\r\nimport othersMsg from \"./othersMsg\";\r\n\r\nconst ChatFeed = (props) => {\r\n    \r\nconst{chats, activeChat, userName, messages } = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts =(messages,ismyMsg)=> chat.people.map((person,index)=> person.last_read === messages.id &&(\r\n        <div>\r\n            key = {`read_${index}`}\r\n            className = \"read-receipt\"\r\n            style={{\r\n                float: ismyMsg? 'right' : 'left',\r\n                backgrounImage: person.person.avatar && `url(${person.person.avatar})`\r\n            }}\r\n        </div>\r\n    ))\r\n\r\n        const renderMessages = () =>{\r\n            const keys = Object.keys(messages);\r\n\r\n            return keys.map((key, index) =>{\r\n                const message = messages[key];\r\n                const lastMessageKey = index === 0 ? null : keys[index -1];\r\n                const ismyMsg = userName === message.sender.userName;\r\n                \r\n                return(\r\n                    <div key = {`msg_${index}`} style={{width: '100%'}}>\r\n                        <div className=\"message-block\">\r\n                            { ismyMsg \r\n                                ? <myMsg message = {messages}/>\r\n                                : <othersMsg message = {message} lastMessage = {messages[lastMessageKey]}/>\r\n                            }\r\n                        </div>\r\n                        <div className = \"read receipts\" style = {{marginRight : ismyMsg ? \"18px\" : \"0px\",\r\n                                                                    marginLeft : ismyMsg ? \"0px\" : \"68px\"\r\n                                                                    }}>\r\n                            {renderReadReceipts(messages,ismyMsg)}                                            \r\n\r\n                        </div>\r\n                    </div>\r\n                );\r\n            });\r\n        }; \r\n\r\n    return(\r\n        <div className = \"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                    <div className=\"chat-title\">{chat?.title}</div>\r\n                    <div className=\"chat-subtitle\">\r\n\r\n                    </div>\r\n                    {renderMessages()}\r\n                    <div style={{height:'100px'}}/>\r\n                    <div className=\"msg-Form-Container\">\r\n                        <msgForm {...props} chatID={activeChat}/>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ChatFeed;","import { ChatEngine } from \"react-chat-engine\"\nimport './App.css';\nimport ChatFeed from \"./components/ChatFeed.jsx\";\nfunction App() {\n  return (\n    <div className=\"App\">\n     <ChatEngine\n      height = \"100vh\"\n      projectID = \"b94397cc-5385-4223-a22e-d0ba0e4df10c\"\n      userName = \"Pavan\"\n      userSecret = \"qwerty\"\n      renderChatFeed = {(chatAppProps) => <ChatFeed {...chatAppProps}/> }\n      onNewMessage = {() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}